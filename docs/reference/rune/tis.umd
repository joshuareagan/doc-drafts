:-  :~  navhome/'/docs/'
        next/'true'
        sort/'5'
        title/'Change Subject = ("tis")'
    ==
;>

# Change Subject `=` ("tis")

These runes modify the subject.  (Or more precisely, they
evaluate at least one of their subexpressions with a modified subject.)

## Overview

Hoon doesn't have variables in the ordinary sense.  If you want to bind a name to a value, e.g., `a` to `12`, you do so by pinning `12` to the subject and associating the name with it.  This sort of operation is done with the `=` family of runes.

Let's say you have some old subject `p`.  To 'pin' a value to the head means to modify the subject by repacing it with a cell of `[new-value p]`.  The head of the cell is the new value.  So to pin `12` with the face `a` the new subject would be: `[a=12 p]`.

Of course there are many variations on ways to modify the subject, useful for different situations.  Hence the whole family of `=` runes.

## Runes

;list(datapreview "true", classname "runes");
